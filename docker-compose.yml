# docker-compose.yml
version: '3.8'

services:
  db:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER:-user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: ${DB_NAME:-sqli_lab_db} # Updated DB_NAME
    ports:
      - "5432:5432" # Expose DB port for local access/tools (optional)
    volumes:
      - db_data:/var/lib/postgresql/data # Persistent data volume
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql # Initialize database with schema and data
    healthcheck: # Added healthcheck for better dependency management
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    environment:
      DB_USER: ${DB_USER:-user}
      DB_HOST: db # Service name for the database container
      DB_NAME: ${DB_NAME:-sqli_lab_db} # Updated DB_NAME
      DB_PASSWORD: ${DB_PASSWORD:-password}
      DB_PORT: ${DB_PORT:-5432}
      PORT: ${BACKEND_PORT:-5000}
    ports:
      - "5000:5000" # Expose backend port
    depends_on:
      db:
        condition: service_healthy # Wait for db to be healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "5173:5173" # Expose Vite's default dev server port
    volumes:
      - ./frontend:/app # Mount the frontend source code for hot reloading
      - /app/node_modules # Exclude node_modules from the mount
    depends_on:
      - backend # Ensure backend is up before frontend starts (for proxy)

volumes:
  db_data: # Define the named volume for database persistence